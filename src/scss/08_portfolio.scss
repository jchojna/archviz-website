//////////////////////////////////////////////////////////////////// PORTFOLIO 
.portfolio {
  width: 100%;
  height: 100%;
}
///////////////////////////////////////////////////////////////////////// GRID 
.grid {
  width: 100%;
  display: grid;
  grid-template-columns: repeat($grid-cols-sm, 1fr);
  grid-auto-rows: $grid-item-height-sm;
  grid-gap: $grid-gap-sm;

  &--flex { // portfolioJS
    display: flex;
    flex-wrap: wrap;
    grid-gap: 0;
  }

  &__item {
    @include flex-center;
    position: relative;
    overflow: hidden;
    
    &::after {
      @include content-absolute;
      box-shadow: inset 0 0 10rem rgba(0,0,0,0.5);
      opacity: 0;
      pointer-events: none;
      transition: opacity $hover-grid-item ease-out,
    }
    
    &:hover {
      &::after {
        opacity: 1;
      }

      & .grid__title {
        opacity: 1;
        transform: scale(1);
        transition: 
          opacity $hover-grid-item cubic-bezier(0.9,0.1,0.9,0.1),
          transform $hover-grid-item ease-out;
      }
    }
  }

  &__title {
    position: absolute;
    word-wrap: break-word;
    color: white;
    font-size: 2.5rem;
    font-weight: normal;
    text-align: center;
    user-select: none;
    opacity: 0;
    transform: scale(6);
    transform-origin: center;
    transition: 
      opacity $hover-grid-item cubic-bezier(0.1,0.9,0.1,0.9),
      transform $hover-grid-item ease-out;
    z-index: 1;
    pointer-events: none;
  }

  &__button {
    @include flex-center;
    position: relative;
    transform: scale(1);
    transition: transform $hover-grid-item ease-out;
    width: 100%;
    height: 100%;

    &::after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgb(0, 238, 255);
      opacity: 0.04;
      pointer-events: none;
      transition: opacity $hover-grid-item;
    }

    &:hover {
      transform: scale($scale-grid-item);

      &::after {
        opacity: 0;
      }
    }
  }

  &__svg-solid {
    display: block;
    fill: $color-main;

    height: 100%;
    min-height: $grid-item-height-sm;
    min-width: 100vw / $grid-cols-sm;

    &--flex { // portfolioJS
      min-height: 0;
      min-width: 0;
      width: 100%;
    }
  }
  
  &__svg-line {
    position: absolute;
    width: 100%;
  }

  &__image {
    visibility: hidden;
    position: absolute;
    height: 100%;
    width: 100%;
    opacity: 0;    
    filter: saturate(30%) brightness(0.7);

    &--loaded {
      visibility: visible;
      opacity: 1;
      transition: opacity $load-grid-image, filter $hover-grid-item;
    }

    &:hover {
      filter: saturate(100%);
    }
  }

  @media only screen and (min-width: $media-md) {

    & {

      grid-template-columns: repeat($grid-cols-md, 1fr);
      grid-auto-rows: $grid-item-height-md;
      grid-gap: $grid-gap-md;

      &--flex { // portfolioJS
        grid-gap: 0;
      }

      &__svg-solid {
        min-height: $grid-item-height-md;
        min-width: 100vw / $grid-cols-md;

        &--flex { // portfolioJS
          min-height: 0;
          min-width: 0;
        }
      }
    }
  }
  
  @media only screen and (min-width: $media-lg) {

    & {

      grid-template-columns: repeat($grid-cols-lg, 1fr);
      grid-auto-rows: $grid-item-height-lg;
      grid-gap: $grid-gap-lg;

      &--flex { // portfolioJS
        grid-gap: 0;
      }

      &__svg-solid {
        min-height: $grid-item-height-lg;
        min-width: 100vw / $grid-cols-lg;

        &--flex { // portfolioJS
          min-height: 0;
          min-width: 0;
        }
      }
    }
  }
}